{
  "connectorClass": "org.apache.kafka.connect.mirror.MirrorHeartbeatConnector",
  "configOverrides": [
    {
      "nameSelector": "name",
      "definition": {
        "group" : "Connector name"
      }
    },
        
    {
      "nameSelector": "emit.heartbeats.interval.seconds",
      "definition": {
        "display_name": "Heartbeat interval",
        "documentation": "Heartbeat interval in seconds",
        "group" : "Heartbeats",
        "importance": "HIGH",
        "order": 1
      }
    },

    {
      "nameSelector": "heartbeats.topic.replication.factor",
      "definition": {
        "display_name": "Heartbeats topic replication factor",
        "group" : "Heartbeats",
        "importance": "MEDIUM",
        "order": 2
      }
    },

    {
      "nameSelector": "source.cluster.alias",
      "definition": {
        "custom_default_value": "source",
        "display_name": "Source cluster alias",
        "documentation": "When using org.apache.kafka.connect.mirror.DefaultReplicationPolicy, topic names will be prefixed with it.",
        "group": "Source cluster",
        "importance": "MEDIUM"
      }
    },
    {
      "nameSelector": "target.cluster.alias",
      "definition": {
        "custom_default_value": "target",
        "display_name": "Target cluster alias",
        "group": "Target cluster",
        "importance": "MEDIUM"
      }
    }

   
  ],
  "configRemovals": [
    "/ssl.*/",
    "/sasl.*/",
    "enabled",
    "topics",
    "topics.exclude",
    "topics.blacklist",
    "groups",
    "groups.exclude",
    "groups.blacklist",
    "config.properties.blacklist",
    "topic.creation.groups",
    "predicates",
    "transforms",
    "errors.log.enable",
    "errors.log.include.messages",
    "topic.filter.class",
    "group.filter.class",
    "config.property.filter.class",
    "consumer.poll.timeout.ms",
    "admin.timeout.ms",
    "metric.reporters",
    "security.protocol",
    "config.action.reload",
    "/sync.topic.configs.*/",
    "/sync.topic.acls.*/",
    "config.properties.exclude",
    "replication.factor",
    "checkpoints.topic.replication.factor",
    "key.converter",
    "value.converter",
    "header.converter",
    "tasks.max",
    "replication.policy.class",
    "refresh.groups.enabled",   
    "refresh.groups.interval.seconds",
    "refresh.topics.enabled",
    "refresh.topics.interval.seconds",
    "emit.checkpoints.enabled",
    "emit.checkpoints.interval.seconds",
    "sync.group.offsets.enabled",
    "sync.group.offsets.interval.seconds",
    "offset-syncs.topic.location",
    "offset-syncs.topic.replication.factor",
    "offset.lag.max",
    "/errors.*/",
    "emit.heartbeats.enabled",
    "replication.policy.separator"
  ]
}