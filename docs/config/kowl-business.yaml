###################################################################
# Commented config settings are optional and show the defaults
###################################################################
kafka:
  brokers:
    - broker-0.mycompany.com:19092
    - broker-1.mycompany.com:19092
    - broker-2.mycompany.com:19092
  # clientId: kowl
  # sasl:
  #   enabled: false
  #   useHandshake: true
  #   username:
  #   password: # This can be set via the --kafka.sasl.password flag as well
  #   mechanism: PLAIN # PLAIN, SCRAM-SHA-256, SCRAM-SHA-512 and GSSAPI are supported
  #   gssapi:
  #     authType:
  #     keyTabPath:
  #     kerberosConfigPath:
  #     serviceName:
  #     username:
  #     password: # can be set via the --kafka.sasl.gssapi.password flag as well
  #     realm:
  # tls:
  #   enabled: false
  #   caFilepath:
  #   certFilepath:
  #   keyFilepath:
  #   passphrase: # This can be set via the --kafka.tls.passphrase flag as well
  #   insecureSkipTlsVerify: false
  # schemaRegistry:
  #   enabled: true
  #   urls: [] # Url with scheme is required, e.g. ["http://localhost:8081"]
  #   username: # Basic auth username
  #   password: # Basic auth password
  #   bearerToken:

# server:
#   listenPort: 8080
#   gracefulShutdownTimeout: 30s
#   listenPort: 8080
#   readTimeout: 30s
#   writeTimeout: 30s
#   idleTimeout: 30s
#   compressionLevel: 4
#   basePath: # Sub-path under which kowl is hosted. See 'docs/config/hosting.md' for more information
#   setBasePathFromXForwardedPrefix: true # Whether or not to check the 'X-Forwarded-Prefix' header to (potentially) override 'basePath'
#   stripPrefix: true # Whether or not kowl should strip the prefix internally


# logger:
#   level: info

# Only relevant for developers, who might want to run the frontend separately
# serveFrontend: true

# Prefix for all exported prometheus metrics
# metricsNamespace: kowl

###################################################################
# Below flags are only available in Kowl Business
###################################################################
# companyName: # Used for white labeling in the frontend

cloudHut:
  licenseToken: # This can be set via the --cloudhut.license-token flag as well

login:
  # jwtSecret can be any random password, but it must be the same across all replicas you run. It is used to sign JWTs
  # which are used for user sessions. If you change the JWT secret all users will need to login again.
  jwtSecret: # This can be set via the --login.jwt-secret flag as well
  # At least one Login provider must be enabled
  google:
    enabled: false
    clientId:
    clientSecret: # This can be set via the --login.google.client-secret flag as well
    # Below properties are required if you want to create roleBindings on Google groups instead of users
    # directory:
    #   serviceAccountFilepath:
    #   targetPrincipal:
  github:
    enabled: false
    clientId:
    clientSecret: # This can be set via the --login.github.client-secret flag as well
    # Below properties are required if you want to create roleBindings on GitHub teams instead of users
    # directory:
    #   personalAccessToken: # This can be set via the --login.github.directory.personal-access-token flag as well

business:
  rolesFilepath:
  roleBindingsFilepath:
  auditLog:
    enabled: false
    additionalHeaders: []
